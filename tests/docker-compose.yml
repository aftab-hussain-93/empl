services:
  app:
    container_name: test_golang_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    # pointing to the main application
    build:
      context: ../
      dockerfile: tests/Dockerfile
    ports:
      - 9090:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    networks:
      - test_app_network

  postgresdb:
    image: postgres:latest
    container_name: test_postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
    volumes:
      - ./pg_data_test:/var/lib/postgresql/data
    networks:
      - test_app_network

volumes:
  pg_data:


# Networks to be created to facilitate communication between containers
networks:
  test_app_network:
    driver: bridge